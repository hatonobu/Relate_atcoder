#ABC327-D
import sys
from collections import deque,defaultdict
import itertools
import heapq
import bisect
import queue
import math

#sys.setrecursionlimit(10 ** 9)
input = lambda: sys.stdin.readline().rstrip()
ii = lambda: int(input())
mi = lambda: map(int, input().split())
ml = lambda: map(str, input().split())
li = lambda: list(mi())
li_st = lambda: list(map(str, input().split()))
lli = lambda n: [li() for _ in range(n)]
mod = 998244353

N,M = mi()
A = li()
B = li()
check = [0]*(N+1)
S = set()

G = [[] for _ in range(N+1)]
for a,b in zip(A,B):
    if a == b:
        print("No")
        exit()
    na = min(a,b)
    nb = max(a,b)
    if (na,nb) in S:
        pass
    else:
        G[na].append(nb)
        G[nb].append(na)

ans = "Yes"
for i in range(1,N+1):
    if check[i]:
        continue
    else:
        q = deque()
        q.append(i)
        s = 1
        check[i] = s
        while(q):
            now = q.popleft()
            s = check[now]
            for nxt in G[now]:
                if check[nxt]:
                    if check[nxt] == s:
                        ans = "No"
                        break
                else:
                    check[nxt] = -s
                    q.append(nxt)

print(ans)